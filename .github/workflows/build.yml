name: Build & Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  BuildConfiguration: Debug
  ImageRegistry: cr.yggdrasill.dev

jobs:
  build:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v2

      - name: Restore dependencies
        run: dotnet restore

      - name: build auth
        shell: pwsh
        run: |
          docker buildx build -t ${{env.ImageRegistry}}/chat/auth:${{github.run_number}} `
            --builder $env:Docker_Builder `
            --platform linux/amd64 `
            -f AuthServer/Dockerfile `
            --build-arg BUILD_CONFIGURATION=${{env.BuildConfiguration}} `
            . `
            --push

      - name: build connector
        shell: pwsh
        run: |
          docker buildx build -t ${{env.ImageRegistry}}/chat/connect:${{github.run_number}} `
            --builder $env:Docker_Builder `
            --platform linux/amd64 `
            -f ChatConnector/Dockerfile `
            --build-arg BUILD_CONFIGURATION=${{env.BuildConfiguration}} `
            . `
            --push

      - name: build chat
        shell: pwsh
        run: |
          docker buildx build -t ${{env.ImageRegistry}}/chat/chat:${{github.run_number}} `
            --builder $env:Docker_Builder `
            --platform linux/amd64 `
            -f ChatServer/Dockerfile `
            --build-arg BUILD_CONFIGURATION=${{env.BuildConfiguration}} `
            . `
            --push

      - name: build room
        shell: pwsh
        run: |
          docker buildx build -t ${{env.ImageRegistry}}/chat/room:${{github.run_number}} `
            --builder $env:Docker_Builder `
            --platform linux/amd64 `
            -f RoomServer/Dockerfile `
            --build-arg BUILD_CONFIGURATION=${{env.BuildConfiguration}} `
            . `
            --push

      - name: build session
        shell: pwsh
        run: |
          docker buildx build -t ${{env.ImageRegistry}}/chat/session:${{github.run_number}} `
            --builder $env:Docker_Builder `
            --platform linux/amd64 `
            -f SessionServer/Dockerfile `
            --build-arg BUILD_CONFIGURATION=${{env.BuildConfiguration}} `
            . `
            --push

      - name: build webclient
        shell: pwsh
        run: |
          docker buildx build -t ${{env.ImageRegistry}}/chat/web:${{github.run_number}} `
            --builder $env:Docker_Builder `
            --platform linux/amd64 `
            -f webClient/Dockerfile `
            --build-arg BUILD_CONFIGURATION=${{env.BuildConfiguration}} `
            webClient `
            --push

      - name: set image tag to helm template
        run: |
          $authValues = gc .\k8s\authsystem\values.yaml | ConvertFrom-Yaml
          $authValues.image.tag = "${{github.run_number}}"
          ConvertTo-Yaml $authValues -OutFile .\k8s\authsystem\values.yaml -Force

          $authValues = gc .\k8s\chatsystem\values.yaml | ConvertFrom-Yaml
          $authValues.image.tag = "${{github.run_number}}"
          ConvertTo-Yaml $authValues -OutFile .\k8s\chatsystem\values.yaml -Force

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.2
        with:
          # Artifact name
          name: k8s
          # A file, directory or wildcard pattern that describes what to upload
          path: k8s/**/*

  deploy:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Download a build artifact
        uses: actions/download-artifact@v2.0.8
        with:
          name: k8s
          path: k8s
      - name: deploy authsystem
        run: |
          echo '${{ secrets.KUBECONFIG }}' | Out-File -Path kubeconfig
          helm template .\k8s\authsystem --set ingress.hosts[0].host=auth.yggdrasill.dev --set database.connectionString='${{ secrets.CONNECTIONSTRING }}' | kubectl --kubeconfig .\kubeconfig apply -f -
          Remove-Item .\kubeconfig
      - name: deploy chatsystem
        env:
          redis: 192.168.2.21:6379
          nats: nats://192.168.2.21:4222
        run: |
          echo '${{ secrets.KUBECONFIG }}' | Out-File -Path kubeconfig
          helm template .\k8s\chatsystem `
            --set ingress.hosts[0].host=chat.yggdrasill.dev `
            --set authServer=https://auth.yggdrasill.dev `
            --set messageServer=$env:nats `
            --set redisServer=$env:redis `
            --set chatEndpoint=wss://chat.yggdrasill.dev/ws `
            | kubectl --kubeconfig .\kubeconfig apply -f -
          Remove-Item .\kubeconfig
